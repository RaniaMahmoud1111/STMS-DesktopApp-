<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="image1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>